version: '3'

networks:
  neon-net:

services:
  neon-dash:
    container_name: neon-dash
    image: nginx:alpine
    ports: 
      - 4199:80
    networks:
      neon-net:
    volumes:
      - ./dist:/var/www:ro
      - ./resources/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./resources/htpasswd:/etc/nginx/htpasswd:ro
  neon-dash-staging:
    container_name: neon-dash-staging
    image: nginx:alpine
    ports: 
      - 5199:80
    networks:
      neon-net:
    volumes:
      - ./dist:/var/www:ro
      - ./resources/nginx-staging.conf:/etc/nginx/conf.d/default.conf:ro
      - ./resources/htpasswd:/etc/nginx/htpasswd:ro
  analysis-ui:
    container_name: analysis-ui
    image: analysis-ui
    volumes:
      - ../analysis-ui/public/configs/prod/config.js:/usr/src/app/src/services/config.js
    ports: 
      - 3000:3000
    depends_on:
      # - neon-es
      - node-server
    networks:
      - neon-net
  analysis-ui-staging:
    container_name: analysis-ui-staging
    image: analysis-ui-staging
    volumes:
      - ../analysis-ui/public/configs/prod/staging-config.js:/usr/src/app/src/services/config.js
    ports: 
      - 2000:2000
    depends_on:
      - node-server
    networks:
      - neon-net
  node-server:
    container_name: node-graphql
    image: node-graphql
    volumes:
      - ../analysis-ui/public/configs/prod/graphql-config.js:/usr/src/app/config.js
    ports: 
      - 9100:9100
    expose:
      - 9100
    depends_on:
      - mongo
    networks:
      - neon-net
    environment:
      NODE_OPTIONS: "--max-old-space-size=8192"
  node-server-staging:
    container_name: node-graphql-staging
    image: node-graphql-staging
    volumes:
      - ../analysis-ui/public/configs/prod/graphql-staging-config.js:/usr/src/app/config.js
    ports: 
      - 9111:9111
    expose:
      - 9111
    depends_on:
      - mongo
    networks:
      - neon-net
    environment:
      NODE_OPTIONS: "--max-old-space-size=8192"
  mongo: 
    image: 'mongo'
    container_name: mcs-mongo
    networks:
      neon-net:
    environment:
      - MONGO_INITDB_DATABASE=mcs
      - MONGO_INITDB_ROOT_USERNAME=mcsroot
      - MONGO_INITDB_ROOT_PASSWORD=mcsr00tp@ssw0rd
    volumes:
      - ./resources/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - '27017:27017'