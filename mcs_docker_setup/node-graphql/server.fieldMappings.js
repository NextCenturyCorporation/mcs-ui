const historyExcludeFields = [
    "_id",
    "eval",
    "flags.interest",
    "flags.remove",
    "steps.args.amount",
    "steps.args.horizon",
    "steps.args.objectId",
    "steps.args.receptacleObjectId",
    "steps.args.rotaion",
    "steps.args.rotation",
    "steps.stepNumber",
    "test_type",
    "url_string",
    "steps.output.reward"
];

const historyFieldLabelMap = {
    category: "Category",
    category_pair: "Pair",
    category_type: "Test Type",
    name: "Test Name",
    performer: "Performer",
    scene_num: "Test Number",
    scene_part_num: "Scene Number",
    "score.adjusted_confidence" : "Score Adjusted Confidence",
    "score.classification" : "Score Classification",
    "score.confidence" : "Score Confidence",
    "score.ground_truth" : "Score Numerical Ground Truth",
    "score.mse": "Score MSE",
    "score.score" : "Score Number Value",
    "score.score_description" : "Score Accuracy",
    "step_counter": "Total Steps",
    "steps.action" : "Performer Actions",
    "steps.output.return_status": "Step Output Status"
};

const sceneExcludeFields = [
    "_id",
    "answer.actions.action",
    "answer.actions.params.amount",
    "answer.actions.params.horizon",
    "answer.actions.params.objectId",
    "answer.actions.params.receptacleObjectId",
    "answer.actions.params.rotation",
    "answer.choice",
    "eval",
    "goal.last_step",
    "goal.metadata.target.id",
    "goal.metadata.target.match_image",
    "goal.metadata.target_1.id",
    "goal.metadata.target_1.image_name",
    "goal.metadata.target_1.match_image",
    "goal.metadata.target_2.id",
    "goal.metadata.target_2.image_name",
    "goal.metadata.target_2.match_image",
    "objects.id",
    "objects.original_location.position.x",
    "objects.original_location.position.y",
    "objects.original_location.position.z",
    "objects.intphys_option.y",
    "objects.intphys_option.position_X",
    "objects.intphys_option.position_y",
    "objects.intphys_option.position_z",
    "objects.original_location.rotation.x",
    "objects.original_location.rotation.y",
    "objects.original_location.rotation.z",
    "objects.original_location.bounding_box.x",
    "objects.original_location.bounding_box.y",
    "objects.original_location.bounding_box.z",
    "objects.shows.bounding_box.x",
    "objects.shows.bounding_box.y",
    "objects.shows.bounding_box.z",
    "performer",
    "objects.intphys_option.occluded_id",
    "objects.stackTarget",
    "objects.locationParent"
];

const sceneFieldLabelMap = {
    ceilingMaterial: "Ceiling Material",
    floorMaterial: "Floor Material",
    wallMaterial: "Wall Material",
    "goal.category" : "Test Category",
    "goal.description" : "Goal Description",
    "goal.metadata.target.image_name" : "Goal Image",
    "goal.series_id" : "Linked Test Series ID",
    name: "Scene Name",
    "objects.dimensions.x": "Object X Dimensions",
    "objects.dimensions.y": "Object Y Dimensions",
    "objects.dimensions.z": "Object Z Dimensions",
    "objects.forces.stepBegin": "Object Force Step Begins",
    "objects.forces.stepEnd": "Object Force Step Ends",
    "objects.forces.vector.x": "Object Forces X Vector",
    "objects.forces.vector.y": "Object Forces Y Vector",
    "objects.forces.vector.z": "Object Forces Z Vector",
    "objects.goal_string": "Object Description",
    "performerStart.position.x": "Start Position X",
    "performerStart.position.y": "Start Position Y",
    "performerStart.position.z": "Start Position Z",
    "performerStart.rotation.x": "Start Rotation X",
    "performerStart.rotation.y": "Start Rotation Y",
    "performerStart.rotation.z": "Start Rotation Z",
    "objects.type": "Object Type",
    "objects.novel_color": "Object is Novel Color",
    "objects.novel_combination": "Object is Novel Combination",
    "objects.novel_shape": "Object is Novel Shape",
    "objects.moveable": "Object is moveable",
    "objects.pickupable": "Object is pickupable",
    "objects.shows.position.x": "Object shows at position X",
    "objects.shows.position.y": "Object shows at position Y",
    "objects.shows.position.z": "Object shows at position Z",
    "objects.shows.stepBegin": "Object shows at step",
    "objects.shows.scale.x": "Object shows at scale X",
    "objects.shows.scale.y": "Object shows at scale Y",
    "objects.shows.scale.z": "Object shows at scale Z",
    "objects.info_string": "Object Descriptors",
    "objects.shape": "Object Shape",
    "objects.intphys_option.force.x": "Object Passive Force X",
    "objects.intphys_option.force.y": "Object Passive Force Y",
    "objects.intphys_option.force.z": "Object Passive Force Z",
    "objects.torques.stepBegin": "Object Torque Step Begin",
    "objects.torques.stepEnd": "Object Torque Step End",
    "objects.torques.vector.x": "Object Torque Vector X",
    "objects.torques.vector.y": "Object Torque Vector Y",
    "objects.torques.vector.z": "Object Torque Vector Z",
    "objects.receptacle": "Object is a receptacle",
    "objects.shows.rotation.x": "Object shows at Rotation X",
    "objects.shows.rotation.y": "Object shows at Rotation Y",
    "objects.shows.rotation.z": "Object shows at Rotation Z",
    "objects.kinematic": "Object is Kinematic",
    "objects.structure": "Object is Structure",
    "objects.moves.stepBegin": "Object move starts at Step",
    "objects.moves.stepEnd": "Object move ends at Step",
    "objects.moves.vector.x": "Object moves at vector X",
    "objects.moves.vector.y": "Object moves at vector Y",
    "objects.moves.vector.z": "Object moves at vector Z",
    "objects.rotates.stepBegin": "Object rotation begins at step",
    "objects.rotates.stepEnd": "Object rotation ends at step",
    "objects.rotates.vector.x": "Object rotates at vector X",
    "objects.rotates.vector.y": "Object rotates at vector Y",
    "objects.rotates.vector.z": "Object rotates at vector Z",
    "objects.intphys_option.is_occluder": "Object is occluder",
    "observation": "Scene is Passive",
    "test_type": "Test Type",
    "scene_num": "Test Number",
    "scene_part_num": "Scene Number",
    "objects.hides.stepBegin": "Object hide begins at Step",
    "objects.openable": "Object is openable",
    "objects.size": "Object Size",
    "objects.teleports.stepBegin": "Object Teleport starts at Step",
    "objects.teleports.stepEnd": "Object Teleport ends at Step",
    "objects.teleports.position.x": "Object Teleport position X",
    "objects.teleports.position.y": "Object Teleport position Y",
    "objects.teleports.position.z": "Object Teleport position Z",
    "objects.mass": "Object Mass"
};


module.exports = {
    historyFieldLabelMap,
    historyExcludeFields,
    sceneExcludeFields,
    sceneFieldLabelMap
};